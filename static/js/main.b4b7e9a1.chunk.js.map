{"version":3,"sources":["personal-info/resume.pdf","components/Navbar.jsx","personal-info/config.js","components/MainBody.jsx","images/profile.jpeg","components/AboutMe.jsx","components/ProjectCard.jsx","components/Project.jsx","components/Skills.jsx","components/Footer.jsx","App.js","reportWebVitals.js","index.js"],"names":["Navigation","React","forwardRef","useState","navbar","setNavbar","navbarMenuRef","useRef","window","addEventListener","pageYOffset","Navbar","ref","className","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","Pdf","target","rel","mainBody","gradientColors","firstName","lastName","firstMessage","secondMessage","about","heading","message","repos","gitHubUsername","reposLength","specificRepos","skills","getInTouch","MainBody","Ref","Jumbotron","fluid","style","background","backgroundSize","lineWidth","depth","position","width","height","Container","cursor","show","strings","typeSpeed","backSpeed","startDelay","backDelay","loop","showCursor","aria-label","aria-hidden","role","AboutMe","src","ProfilePicture","alt","CardButtons","svn_url","Language","languages_url","repo_url","data","setData","handleRequest","useCallback","a","axios","get","response","console","error","useEffect","array","total_count","index","Object","prototype","hasOwnProperty","call","push","length","map","language","Math","trunc","CardFooter","star_count","pushed_at","updated_at","setUpdated_at","handleUpdatetime","date","Date","diff","getTime","hours","measurement","toString","time","Intl","DateTimeFormat","day","month","year","format","ProjectCard","value","name","description","stargazers_count","Col","md","Card","Body","Title","as","Text","count","dummyProject","API","Project","allReposAPI","specficReposAPI","dummyProjectsArr","Array","fill","projectsArray","setProjectsArray","fetchRepos","repoList","slice","i","Row","project","Skills","skillsTabRef","Footer","backgroundColor","App","basename","process","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b4b7e9a1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/resume.ef26f2e6.pdf\";","import React, { useState } from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Pdf from '../personal-info/resume.pdf';\n\nconst Navigation = React.forwardRef(() => {\n  const [navbar, setNavbar] = useState(false);\n  const navbarMenuRef = React.useRef();\n\n  const changeBackground = () => {\n    if (window.pageYOffset >= 80) {\n      setNavbar(true);\n    } else {\n      setNavbar(false);\n    }\n  };\n\n  window.addEventListener('scroll', changeBackground);\n\n  return (\n    <Navbar\n      ref={navbarMenuRef}\n      className={` fixed-top  ${\n        navbar ? 'navbar-white' : 'navbar-transparent'\n      }`}\n      expand=\"lg\"\n    >\n      <Navbar.Brand className=\"brand\" href=\"/#home\">\n        {`< Portfolio />`}\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" className=\"toggler\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <Nav.Link\n            className=\"nav-link lead\"\n            href={Pdf}\n            target=\"_blank\"\n            rel=\"noreferrer noopener\"\n          >\n            Resume\n          </Nav.Link>\n          <Nav.Link className=\"nav-link lead\" href=\"/#aboutme\">\n            About\n          </Nav.Link>\n          <Nav.Link className=\"nav-link lead\" href=\"/#projects\">\n            Projects\n          </Nav.Link>\n          <Nav.Link className=\"nav-link lead\" href=\"/#skills\">\n            Skills\n          </Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n});\n\nexport default Navigation;\n","// NAVIGATION BAR SECTION\n\nconst navBar = {};\n\n// MAIN BODY SECTION\n\nconst mainBody = {\n  gradientColors: '#FFFFFF, #3D3D3D, #000000',\n  firstName: 'Nikita',\n  lastName: 'Stetskiy',\n  firstMessage: ' The secret of getting ahead is getting started. ',\n  secondMessage: [\n    'Computer Science Student',\n    'IT Engineer',\n    'Full Stack Developer',\n  ],\n};\n\n// ABOUT SECTION\n\nconst about = {\n  heading: 'About Me',\n  message:\n    'My name is Nikita Stetskiy. I’m an IT engineer student from the University of Granada. In my spare time I enjoy improving my editing skills and ' +\n    \"being engaging with projects that require me to work outside my comfort set, as continuing to learn new languages and development techniques. I'm improving myself to become dedicated and efficient \" +\n    'full stack developer expert in application layers, presentation layers, databases, data structures and my relationships.',\n};\n\n// PROJECTS SECTION\n// Setting up project lenght will automatically fetch your that number of recently updated projects, or you can set this field 0 to show none.\n//      i.e: reposLength: 0,\n// If you want to display specfic projects, add the repository names,\n//      i.e [\"repository-1\", \"repo-2\"]\n\nconst repos = {\n  heading: 'Recent Projects',\n  gitHubUsername: 'nikitastetskiy',\n  reposLength: 4,\n  specificRepos: [],\n};\n\n// SKILLS SECTION\n\nconst skills = {\n  heading: 'Skills',\n};\n\n// GET IN TOUCH SECTION\n\nconst getInTouch = {\n  heading: 'Get In Touch',\n  message:\n    'Thank you for your time and consideration. Feel free to email me at',\n  email: 'nikitastetskiy@gmail.com',\n};\n\nexport { navBar, mainBody, about, repos, skills, getInTouch };\n","import React from 'react';\nimport Typist from 'react-typist';\nimport Typed from 'react-typed';\nimport Container from 'react-bootstrap/Container';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport StarfieldAnimation from 'react-starfield-animation';\nimport { mainBody, getInTouch } from '../personal-info/config';\n\nconst MainBody = React.forwardRef(() => {\n  const Ref = React.useRef();\n\n  return (\n    <Jumbotron\n      fluid\n      id=\"home\"\n      style={{\n        background: `linear-gradient(136deg,${mainBody.gradientColors})`,\n        backgroundSize: '1000% 1000%',\n      }}\n      className=\"title bg-transparent bgstyle text-light min-vh-100 d-flex align-content-center align-items-center flex-wrap m-0\"\n    >\n      <StarfieldAnimation\n        lineWidth={0.0}\n        depth={1000}\n        style={{\n          position: 'absolute',\n          width: '100%',\n          height: '100%',\n        }}\n      />\n      <Container className=\"text-center text-mix\">\n        <h1 ref={Ref} className=\"display-1\">\n          {`${mainBody.firstName} ${mainBody.lastName}`}\n        </h1>\n        <div>\n          {/* \n          \n          Using componentWillReceiveProps (deprecated)\n          \n          */}\n          <div className=\"p-3\">\n            <Typist className=\"lead typist\" cursor={{ show: false }}>\n              {mainBody.firstMessage}\n            </Typist>\n          </div>\n          <div className=\"p-1\">\n            &lt;\n            <Typed\n              strings={mainBody.secondMessage}\n              typeSpeed={40}\n              backSpeed={60}\n              startDelay={4000}\n              backDelay={1000}\n              loop\n              showCursor={false}\n            />\n            /&gt;\n          </div>\n        </div>\n        <div className=\"header-icons\">\n          <a\n            aria-label=\"Send email\"\n            href={`mailto:${getInTouch.email}`}\n            rel=\"noreferrer noopener\"\n          >\n            <i className=\"icon fa fa-envelope\" />\n          </a>\n          <a\n            aria-label=\"My Linkedin\"\n            target=\"_blank\"\n            rel=\"noreferrer noopener\"\n            href=\"https://www.linkedin.com/in/nikita-stetskiy-743572150/\"\n          >\n            <i className=\"icon fab fa-linkedin\" aria-hidden=\"true\" />\n          </a>\n          <a\n            aria-label=\"My Github\"\n            target=\"_blank\"\n            rel=\"noreferrer noopener\"\n            href=\"https://github.com/nikitastetskiy\"\n          >\n            <i className=\"icon fab fa-github-alt\" aria-hidden=\"true\" />\n          </a>\n        </div>\n        <a\n          className=\"btn btn-outline-light btn-lg\"\n          href=\"#aboutme\"\n          role=\"button\"\n          aria-label=\"Learn more about me\"\n        >\n          More about me\n        </a>\n      </Container>\n    </Jumbotron>\n  );\n});\n\nexport default MainBody;\n","export default __webpack_public_path__ + \"static/media/profile.6f771833.jpeg\";","import React from 'react';\nimport { about } from '../personal-info/config';\nimport ProfilePicture from '../images/profile.jpeg';\nimport Pdf from '../personal-info/resume.pdf';\n\nconst AboutMe = () => (\n  <div id=\"aboutme\" className=\"jumbotron jumbotron-fluid m-0 bg-light\">\n    <div className=\"container container-fluid display-4 pb-5 text-center\">\n      <div className=\"row aboutme-text\">\n        <div>\n          <img\n            className=\"border-secondary rounded-circle center pic\"\n            src={ProfilePicture}\n            alt=\"profilePicture\"\n          />\n        </div>\n\n        <div className=\"container container-fluid\">\n          <h2 className=\"display-4 mb-5 text-center\">{about.heading}</h2>\n          <p className=\"lead text-center\">{about.message}</p>\n          <p className=\"lead text-center\">\n            <a\n              className=\"btn btn-outline-dark btn-lg\"\n              href={Pdf}\n              target=\"_blank\"\n              rel=\"noreferrer noopener\"\n              role=\"button\"\n              aria-label=\"Resume/CV\"\n            >\n              Resume\n            </a>\n          </p>\n        </div>\n      </div>\n    </div>\n  </div>\n);\nexport default AboutMe;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport Skeleton from 'react-loading-skeleton';\nimport axios from 'axios';\n\n// Missing in props validation\n\nconst ProjectCard = ({ value }) => {\n  const {\n    name,\n    description,\n    svn_url,\n    stargazers_count,\n    languages_url,\n    pushed_at,\n  } = value;\n  return (\n    <Col md={6}>\n      <Card className=\"card shadow-lg p-3 mb-5 bg-white rounded\">\n        <Card.Body>\n          <Card.Title as=\"h5\">{name || <Skeleton />}</Card.Title>\n          <Card.Text>\n            {!description ? '' : description || <Skeleton count={3} />}\n          </Card.Text>\n          {svn_url ? <CardButtons svn_url={svn_url} /> : <Skeleton count={2} />}\n          <hr />\n          {languages_url ? (\n            <Language languages_url={languages_url} repo_url={svn_url} />\n          ) : (\n            <Skeleton count={3} />\n          )}\n          {value ? (\n            <CardFooter\n              star_count={stargazers_count}\n              repo_url={svn_url}\n              pushed_at={pushed_at}\n            />\n          ) : (\n            <Skeleton />\n          )}\n        </Card.Body>\n      </Card>\n    </Col>\n  );\n};\n\nconst CardButtons = ({ svn_url }) => (\n  <>\n    <a\n      href={`${svn_url}/archive/master.zip`}\n      className=\"btn btn-outline-secondary mr-3\"\n    >\n      <i className=\"fab fa-github\" />\n      &nbsp; Clone Project\n    </a>\n    <a href={svn_url} target=\" _blank\" className=\"btn btn-outline-secondary\">\n      <i className=\"fab fa-github\" />\n      &nbsp;Repo\n    </a>\n  </>\n);\n\nconst Language = ({ languages_url, repo_url }) => {\n  const [data, setData] = useState([]);\n\n  const handleRequest = useCallback(\n    async function () {\n      try {\n        const response = await axios.get(languages_url);\n        return setData(response.data);\n      } catch (error) {\n        return console.error(error.message);\n      }\n    },\n    [languages_url]\n  );\n\n  useEffect(() => {\n    handleRequest();\n  }, [handleRequest]);\n\n  const array = [];\n  let total_count = 0;\n  for (const index in data) {\n    if (Object.prototype.hasOwnProperty.call(data, index)) {\n      array.push(index);\n      total_count += data[index];\n    }\n  }\n\n  return (\n    <div className=\"pb-3\">\n      Languages:&nbsp;\n      {array.length\n        ? array.map((language) => (\n            <a\n              key={language}\n              className=\"badge badge-light card-link\"\n              href={`${repo_url}/search?l=${language}`}\n              target=\" _blank\"\n            >\n              {language}\n              :&nbsp;\n              {Math.trunc((data[language] / total_count) * 1000) / 10}\n              &nbsp; %\n            </a>\n          ))\n        : 'code yet to be deployed.'}\n    </div>\n  );\n};\n\nconst CardFooter = ({ star_count, repo_url, pushed_at }) => {\n  const [updated_at, setUpdated_at] = useState('0 mints');\n\n  const handleUpdatetime = useCallback(() => {\n    const date = new Date(pushed_at);\n    const nowdate = new Date();\n    const diff = nowdate.getTime() - date.getTime();\n    const hours = Math.trunc(diff / 1000 / 60 / 60);\n\n    if (hours < 24) {\n      if (hours < 1) return setUpdated_at('just now');\n      const measurement = hours === 1 ? 'hour' : 'hours';\n      return setUpdated_at(`${hours.toString()} ${measurement} ago`);\n    }\n    const options = { day: 'numeric', month: 'long', year: 'numeric' };\n    const time = new Intl.DateTimeFormat('en-US', options).format(date);\n    return setUpdated_at(`on ${time}`);\n  }, [pushed_at]);\n\n  useEffect(() => {\n    handleUpdatetime();\n  }, [handleUpdatetime]);\n\n  return (\n    <p className=\"card-text\">\n      <a\n        href={`${repo_url}/stargazers`}\n        target=\" _blank\"\n        className=\"text-dark text-decoration-none\"\n      >\n        <span className=\"text-dark card-link mr-4\">\n          <i className=\"fab fa-github\" />\n          &nbsp;Stars&nbsp;\n          <span className=\"badge badge-dark\">{star_count}</span>\n        </span>\n      </a>\n      <small className=\"text-muted\">\n        Updated&nbsp;\n        {updated_at}\n      </small>\n    </p>\n  );\n};\n\nexport default ProjectCard;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Row from 'react-bootstrap/Row';\nimport axios from 'axios';\nimport ProjectCard from './ProjectCard';\nimport { repos } from '../personal-info/config';\n\nconst dummyProject = {\n  name: null,\n  description: null,\n  svn_url: null,\n  stargazers_count: null,\n  languages_url: null,\n  pushed_at: null,\n};\nconst API = 'https://api.github.com';\n\nconst Project = () => {\n  const allReposAPI = `${API}/users/${repos.gitHubUsername}/repos?sort=updated&direction=desc`;\n  const specficReposAPI = `${API}/repos/${repos.gitHubUsername}`;\n  const dummyProjectsArr = new Array(\n    repos.reposLength + repos.specificRepos.length\n  ).fill(dummyProject);\n\n  const [projectsArray, setProjectsArray] = useState([]);\n\n  const fetchRepos = useCallback(async () => {\n    let repoList = [];\n    try {\n      // getting all repos\n      let response = await axios.get(allReposAPI);\n      // slicing to the length\n      repoList = [...response.data.slice(0, repos.reposLength)];\n      // adding specified repos\n      try {\n        for (let i = 0; i < repos.specificRepos.length; i += 1) {\n          response = await axios.get(\n            `${specficReposAPI}/${repos.specificRepos[i]}`\n          );\n          repoList.push(response.data);\n        }\n      } catch (error) {\n        console.error(error.message);\n      }\n      // setting projectArray\n      // TODO: remove the duplication.\n      setProjectsArray(repoList);\n    } catch (error) {\n      console.error(error.message);\n    }\n  }, [allReposAPI, repos.reposLength, repos.specificRepos, specficReposAPI]);\n\n  useEffect(() => {\n    fetchRepos();\n  }, [fetchRepos]);\n\n  return (\n    <Jumbotron fluid id=\"projects\" className=\"bg-light m-0 align-items-center\">\n      <Container className=\"\">\n        <h2 className=\"display-4 pb-5 text-center\">{repos.heading}</h2>\n        <Row>\n          {projectsArray.length\n            ? projectsArray.map((project, index) => (\n                <ProjectCard\n                  key={`project-card-${repos.reposLength - index}`}\n                  id={`project-card-${index}`}\n                  value={project}\n                />\n              ))\n            : dummyProjectsArr.map((project, index) => (\n                <ProjectCard\n                  key={`dummy-${repos.reposLength - index}`}\n                  id={`dummy-${index}`}\n                  value={project}\n                />\n              ))}\n        </Row>\n      </Container>\n    </Jumbotron>\n  );\n};\n\nexport default Project;\n","import React from 'react';\nimport { Jumbotron, Container } from 'react-bootstrap';\nimport { skills } from '../personal-info/config';\n\nfunction Skills() {\n  return (\n    <Jumbotron ref={skills.skillsTabRef} fluid className=\"m-0\" id=\"skills\">\n      <Container className=\"p-2\">\n        <h2 ref={skills.skillsTabRef} className=\"display-4 pb-5 text-center\">\n          {skills.heading}\n        </h2>\n        <div className=\"user\">\n          <div>\n            <div className=\"tech\">\n              <h2 className=\"pb-3\">Code</h2>\n              <i className=\"icons fab fa-python\" />\n              <i className=\"icons fab fa-js-square\" />\n              <i className=\"icons devicon-cplusplus-line-wordmark\" />\n            </div>\n            <div className=\"tech\">\n              <i className=\"icons devicon-java-plain\" />\n              <i className=\"icons devicon-ruby-plain\" />\n              <i className=\"icons devicon-html5-plain-wordmark\" />\n            </div>\n          </div>\n\n          <div>\n            <div className=\"tech\">\n              <h2 className=\"pb-3\">Web</h2>\n              <i className=\"icons devicon-apache-line-wordmark\" />\n              <i className=\"icons devicon-django-line-wordmark\" />\n              <i className=\"icons fab devicon-nginx-original-wordmark\" />\n            </div>\n            <div className=\"tech\">\n              <i className=\"icons devicon-bootstrap-plain-wordmark\" />\n              <i className=\"icons devicon-flask-original\" />\n              <i className=\"icons devicon-heroku-original\" />\n            </div>\n          </div>\n          <div>\n            <div className=\"tech\">\n              <h2 className=\"pb-3\">Tools</h2>\n              <i className=\"icons devicon-docker-plain\" />\n              <i className=\"icons fab fa-git\" />\n              <i className=\"icons fab devicon-mongodb-plain-wordmark\" />\n            </div>\n            <div className=\"tech\">\n              <i className=\"icons devicon-postgresql-plain\" />\n              <i className=\"icons devicon-npm-original-wordmark\" />\n              <i className=\"icons devicon-express-original-wordmark\" />\n            </div>\n          </div>\n        </div>\n      </Container>\n    </Jumbotron>\n  );\n}\n\nexport default Skills;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport { getInTouch } from '../personal-info/config';\n\nconst Footer = () => {\n  const bgStyle = { backgroundColor: '#EEEEEE' };\n\n  return (\n    <footer style={bgStyle} className=\"mt-auto py-5 text-center\">\n      <Container>\n        <h2 className=\"display-5 pb-3 text-center\">{getInTouch.heading}</h2>\n        <p className=\"lead text-center pb-3\">\n          {getInTouch.message}\n          &nbsp;\n          <a href={`mailto:${getInTouch.email}`}>{getInTouch.email}</a>\n          .&nbsp;\n        </p>\n        <p>\n          <small className=\"text-muted\">\n            Project code is open source. Feel free to fork it on&nbsp;\n            <a\n              target=\"_blank\"\n              rel=\"noreferrer noopener\"\n              href=\"https://github.com/nikitastetskiy\"\n              aria-label=\"My GitHub\"\n            >\n              Github\n            </a>\n            .\n          </small>\n        </p>\n      </Container>\n    </footer>\n  );\n};\n\nexport default Footer;\n","/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport MainBody from './components/MainBody';\nimport AboutMe from './components/AboutMe';\nimport Project from './components/Project';\nimport Skills from './components/Skills';\nimport Footer from './components/Footer';\nimport './scss/custom.scss';\nimport './App.css';\n\nconst App = () => {\n  return (\n    <BrowserRouter basename={`${process.env.PUBLIC_URL}/`}>\n      <Navbar />\n      <MainBody />\n      <AboutMe />\n      <Skills />\n      <Project />\n      <Footer />\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}